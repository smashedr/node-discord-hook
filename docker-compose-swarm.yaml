version: "3.8"

services:
  nginx:
    build:
      context: nginx
    image: ghcr.io/smashedr/node-discord-hook-nginx:latest
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "1.0"
          memory: 32M
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.node-discord-hook-http.rule=Host(`relay.cssnr.com`)
        - traefik.http.routers.node-discord-hook-http.entrypoints=http
        - traefik.http.routers.node-discord-hook-http.middlewares=https-redirect
        - traefik.http.routers.node-discord-hook-https.rule=Host(`relay.cssnr.com`)
        - traefik.http.routers.node-discord-hook-https.entrypoints=https
        - traefik.http.routers.node-discord-hook-https.tls=true
        - traefik.http.services.node-discord-hook-https.loadbalancer.server.port=80
    healthcheck:
      test: ["CMD-SHELL", "curl -sf localhost:80/health-check || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 3
    depends_on:
      - app
    networks:
      - internal
      - traefik-public

  app:
    build:
      context: app
    image: ghcr.io/smashedr/node-discord-hook-app:latest
    env_file: settings.env
    command: "node app.js"
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "2.0"
          memory: 64M
    networks:
      - internal

networks:
  internal:
    driver: overlay
  traefik-public:
    external: true
